from stability_sdk.client import StabilityInference
import stability_sdk.interfaces.gooseai.generation.generation_pb2 as generation
from PIL import Image
import io
import os

class ImageGenerator:
    def __init__(self, api_key: str, engine: str):
        """
        Initializes the Stability AI client using the new StabilityInference class.
        """
        if not api_key:
            raise ValueError("Stability AI API key is not set.")
            
        # Use the StabilityInference class to create the client
        self.api = StabilityInference(
            key=api_key,
            engine=engine,
            verbose=True, # Will print helpful status updates to the console
        )

    def generate(self, prompt: str, **kwargs) -> Image.Image:
        """
        Generates an image from a text prompt using the Stability AI API.
        """
        try:
            # The generate method returns a generator. We iterate over it to get the answers.
            answers = self.api.generate(
                prompt=prompt,
                steps=50,
                width=1024,
                height=1024,
                samples=1,
                sampler=generation.SAMPLER_K_DPMPP_2M # A recommended sampler
            )

            # Check for errors and process the response
            for resp in answers:
                for artifact in resp.artifacts:
                    # Check if the safety filter was triggered
                    if artifact.finish_reason == generation.FILTER:
                        raise ValueError("Your request was filtered by the safety system. Please try a different prompt.")
                    
                    # If we have an image, convert it and return it
                    if artifact.type == generation.ARTIFACT_IMAGE:
                        image = Image.open(io.BytesIO(artifact.binary))
                        return image
            
            # This part is reached if no image was generated
            raise Exception("No image was generated by the API.")

        except Exception as e:
            raise Exception(f"Stability AI image generation failed: {str(e)}")

    def _create_placeholder_image(self, size=(512, 512)):
        """Create a placeholder image for testing."""
        return Image.new('RGB', size, color='white') 